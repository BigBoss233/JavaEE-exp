<?xml version="1.0" encoding="UTF-8"?>
<!--
    status="warn" 日志框架本身的输出日志级别
    monitorInterval="5" 自动加载配置文件的间隔时间,不低于5秒  //使用的是热配置，不需要重启服务器
-->
<Configuration status="error" monitorInterval="5">
    <properties>
        <property name="LOG_HOME">D:/logs</property>
    </properties>
    <!--  4.3 Log4j2异步日志
      异步日志
      log4j2最大的特点就是异步日志，其性能的提升主要也是从异步日志中受益，我们来看看如何使用
      log4j2的异步日志。
      同步日志-->
    <Appenders>
        <Console name="Console" target="SYSTEM_ERR">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] [%-5level] %c{36}:%L - -- %m%n"/>
        </Console>

        <File name="file" fileName="${LOG_HOME}/log4j2.log">
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36} - %m%n"/>
        </File>
        <Async name="Async">
            <AppenderRef ref="file"/>
        </Async>
        <!--随机读写流的日志文件输出 appender 性能提高很多-->
        <RandomAccessFile name="accessFile" fileName="${LOG_HOME}/myAcclog.log">
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36} - %m%n"/>
        </RandomAccessFile>


        <RollingFile name="rollingFile" fileName="${LOG_HOME}/myrollog.log"
                     filePattern="D:/logs/$${date:yyyy-MM-dd}/myrollog-%d{yyyy- MM-dd-HH-mm}-%i.log">
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36} - %msg%n"/>
            <Policies>
                <!--在系统启动时，触发拆分规则，生成一个新的日志文件-->
                <OnStartupTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="10 MB"/>
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <!--在同一个文件目录下，文件的个数限定为30个，超过进行覆盖-->
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>
    </Appenders>

    <Loggers>
        <!--自定义异步logger对象
            includeLocation="false" 关闭日志记录的行号信息，必须设为false，否则可能会比同步性能还要差
            additivity="false" 不继承父类
        -->
        <Logger name="com.zaxxer.hikari" level="error">
            <AppenderRef ref="Console"/>
        </Logger>


        <Root level="info">
            <AppenderRef ref="Console"/>
<!--            使用异步的file appender-->
            <AppenderRef ref="Async"/>
        </Root>
    </Loggers>
</Configuration>